/* Generated by re2c 3.0 */
use memchr::memmem;
use std::str;
use pest::Parser;
use pest_derive::Parser;

#[cfg(debug_assertions)]
const _LEXER: &str = include_str!("lexer.pest");

#[derive(Parser)]
#[grammar = "lexer.pest"]
struct Lexer;

#[inline(always)]
fn search(rule: Rule, line: &[u8]) -> Option<usize> {
    if let Ok(pairs) = Lexer::parse(rule, unsafe { str::from_utf8_unchecked(line) }) {
        Some(pairs.last().unwrap().as_span().end())
    } else {
        None
    }
}
#[inline(always)]
fn is_match(rule: Rule, line: &[u8]) -> bool {
    Lexer::parse(rule, unsafe { str::from_utf8_unchecked(line) }).is_ok()
}

// TODO: consider dropping all the #[inline(always)], we probably don't know
// better than rustc.



#[inline(always)]
pub fn atx_heading_start(s: &[u8]) -> Option<usize> {
    let mut cursor = 0;
    let mut marker = 0;

{
	#[allow(unused_assignments)]
	let mut yych : u8 = 0;
	let mut yystate : usize = 0;
	'yyl: loop {
		match yystate {
			0 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				cursor += 1;
				match yych {
					0x23 => {
						yystate = 3;
						continue 'yyl;
					}
					_ => {
						yystate = 1;
						continue 'yyl;
					}
				}
			}
			1 => {
				yystate = 2;
				continue 'yyl;
			}
			2 => { return None; }
			3 => {
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					0x23 => {
						cursor += 1;
						yystate = 7;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			4 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					_ => {
						yystate = 5;
						continue 'yyl;
					}
				}
			}
			5 => { return Some(cursor); }
			6 => {
				yystate = 5;
				continue 'yyl;
			}
			7 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					0x23 => {
						cursor += 1;
						yystate = 9;
						continue 'yyl;
					}
					_ => {
						yystate = 8;
						continue 'yyl;
					}
				}
			}
			8 => {
				cursor = marker;
				yystate = 2;
				continue 'yyl;
			}
			9 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					0x23 => {
						cursor += 1;
						yystate = 10;
						continue 'yyl;
					}
					_ => {
						yystate = 8;
						continue 'yyl;
					}
				}
			}
			10 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					0x23 => {
						cursor += 1;
						yystate = 11;
						continue 'yyl;
					}
					_ => {
						yystate = 8;
						continue 'yyl;
					}
				}
			}
			11 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					0x23 => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					_ => {
						yystate = 8;
						continue 'yyl;
					}
				}
			}
			12 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x09 |
					0x20 => {
						cursor += 1;
						yystate = 4;
						continue 'yyl;
					}
					0x0A |
					0x0D => {
						cursor += 1;
						yystate = 6;
						continue 'yyl;
					}
					_ => {
						yystate = 8;
						continue 'yyl;
					}
				}
			}
			_ => {
				panic!("internal lexer error")
			}
		}
	}
}

}

#[inline(always)]
pub fn html_block_end_1(s: &[u8]) -> bool {
    let mut cursor = 0;
    let mut marker = 0;

{
	#[allow(unused_assignments)]
	let mut yych : u8 = 0;
	let mut yyaccept : usize = 0;
	let mut yystate : usize = 0;
	'yyl: loop {
		match yystate {
			0 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				cursor += 1;
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x7F => {
						yystate = 3;
						continue 'yyl;
					}
					0x3C => {
						yystate = 4;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						yystate = 5;
						continue 'yyl;
					}
					0xE0 => {
						yystate = 6;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						yystate = 7;
						continue 'yyl;
					}
					0xED => {
						yystate = 8;
						continue 'yyl;
					}
					0xF0 => {
						yystate = 9;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						yystate = 10;
						continue 'yyl;
					}
					0xF4 => {
						yystate = 11;
						continue 'yyl;
					}
					_ => {
						yystate = 1;
						continue 'yyl;
					}
				}
			}
			1 => {
				yystate = 2;
				continue 'yyl;
			}
			2 => { return false; }
			3 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x7F |
					0xC2 ..= 0xF4 => {
						yystate = 13;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			4 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x2E |
					0x30 ..= 0x7F |
					0xC2 ..= 0xF4 => {
						yystate = 13;
						continue 'yyl;
					}
					0x2F => {
						cursor += 1;
						yystate = 23;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			5 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			6 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0xA0 ..= 0xBF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			7 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			8 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0x9F => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			9 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x90 ..= 0xBF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			10 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			11 => {
				yyaccept = 0;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0x8F => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 2;
						continue 'yyl;
					}
				}
			}
			12 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				yystate = 13;
				continue 'yyl;
			}
			13 => {
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			14 => {
				cursor = marker;
				if yyaccept == 0 {
					yystate = 2;
					continue 'yyl;
				} else {
					yystate = 36;
					continue 'yyl;
				}
			}
			15 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x2E |
					0x30 ..= 0x3B |
					0x3D ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x2F => {
						cursor += 1;
						yystate = 23;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			16 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			17 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0xA0 ..= 0xBF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			18 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			19 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0x9F => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			20 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x90 ..= 0xBF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			21 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0xBF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			22 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x80 ..= 0x8F => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			23 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x4F |
					0x51 ..= 0x52 |
					0x55 ..= 0x6F |
					0x71 ..= 0x72 |
					0x75 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x50 |
					0x70 => {
						cursor += 1;
						yystate = 24;
						continue 'yyl;
					}
					0x53 |
					0x73 => {
						cursor += 1;
						yystate = 25;
						continue 'yyl;
					}
					0x54 |
					0x74 => {
						cursor += 1;
						yystate = 26;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			24 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x51 |
					0x53 ..= 0x71 |
					0x73 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x52 |
					0x72 => {
						cursor += 1;
						yystate = 27;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			25 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x42 |
					0x44 ..= 0x53 |
					0x55 ..= 0x62 |
					0x64 ..= 0x73 |
					0x75 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x43 |
					0x63 => {
						cursor += 1;
						yystate = 28;
						continue 'yyl;
					}
					0x54 |
					0x74 => {
						cursor += 1;
						yystate = 29;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			26 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x44 |
					0x46 ..= 0x64 |
					0x66 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x45 |
					0x65 => {
						cursor += 1;
						yystate = 30;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			27 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x44 |
					0x46 ..= 0x64 |
					0x66 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x45 |
					0x65 => {
						cursor += 1;
						yystate = 31;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			28 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x51 |
					0x53 ..= 0x71 |
					0x73 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x52 |
					0x72 => {
						cursor += 1;
						yystate = 32;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			29 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x58 |
					0x5A ..= 0x78 |
					0x7A ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x59 |
					0x79 => {
						cursor += 1;
						yystate = 33;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			30 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x57 |
					0x59 ..= 0x77 |
					0x79 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x58 |
					0x78 => {
						cursor += 1;
						yystate = 34;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			31 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D |
					0x3F ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x3E => {
						cursor += 1;
						yystate = 35;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			32 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x48 |
					0x4A ..= 0x68 |
					0x6A ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x49 |
					0x69 => {
						cursor += 1;
						yystate = 37;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			33 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x4B |
					0x4D ..= 0x6B |
					0x6D ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x4C |
					0x6C => {
						cursor += 1;
						yystate = 27;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			34 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x53 |
					0x55 ..= 0x73 |
					0x75 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x54 |
					0x74 => {
						cursor += 1;
						yystate = 38;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			35 => {
				yyaccept = 1;
				marker = cursor;
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 36;
						continue 'yyl;
					}
				}
			}
			36 => { return true; }
			37 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x4F |
					0x51 ..= 0x6F |
					0x71 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x50 |
					0x70 => {
						cursor += 1;
						yystate = 39;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			38 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x40 |
					0x42 ..= 0x60 |
					0x62 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x41 |
					0x61 => {
						cursor += 1;
						yystate = 40;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			39 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x53 |
					0x55 ..= 0x73 |
					0x75 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x54 |
					0x74 => {
						cursor += 1;
						yystate = 31;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			40 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x51 |
					0x53 ..= 0x71 |
					0x73 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x52 |
					0x72 => {
						cursor += 1;
						yystate = 41;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			41 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x44 |
					0x46 ..= 0x64 |
					0x66 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x45 |
					0x65 => {
						cursor += 1;
						yystate = 42;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			42 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				match yych {
					0x01 ..= 0x09 |
					0x0B ..= 0x3B |
					0x3D ..= 0x40 |
					0x42 ..= 0x60 |
					0x62 ..= 0x7F => {
						cursor += 1;
						yystate = 12;
						continue 'yyl;
					}
					0x3C => {
						cursor += 1;
						yystate = 15;
						continue 'yyl;
					}
					0x41 |
					0x61 => {
						cursor += 1;
						yystate = 31;
						continue 'yyl;
					}
					0xC2 ..= 0xDF => {
						cursor += 1;
						yystate = 16;
						continue 'yyl;
					}
					0xE0 => {
						cursor += 1;
						yystate = 17;
						continue 'yyl;
					}
					0xE1 ..= 0xEC |
					0xEE ..= 0xEF => {
						cursor += 1;
						yystate = 18;
						continue 'yyl;
					}
					0xED => {
						cursor += 1;
						yystate = 19;
						continue 'yyl;
					}
					0xF0 => {
						cursor += 1;
						yystate = 20;
						continue 'yyl;
					}
					0xF1 ..= 0xF3 => {
						cursor += 1;
						yystate = 21;
						continue 'yyl;
					}
					0xF4 => {
						cursor += 1;
						yystate = 22;
						continue 'yyl;
					}
					_ => {
						yystate = 14;
						continue 'yyl;
					}
				}
			}
			_ => {
				panic!("internal lexer error")
			}
		}
	}
}

}

#[inline(always)]
pub fn html_block_end_2(line: &[u8]) -> bool {
    memmem::find(line, b"-->").is_some()
}

#[inline(always)]
pub fn html_block_end_3(line: &[u8]) -> bool {
    memmem::find(line, b"?>").is_some()
}

#[inline(always)]
pub fn html_block_end_4(line: &[u8]) -> bool {
    line.contains(&b'>')
}

#[inline(always)]
pub fn html_block_end_5(line: &[u8]) -> bool {
    memmem::find(line, b"]]>").is_some()
}

#[inline(always)]
pub fn open_code_fence(line: &[u8]) -> Option<usize> {
    if line[0] != b'`' && line[0] != b'~' {
        return None;
    }
    search(Rule::open_code_fence, line)
}

#[inline(always)]
pub fn close_code_fence(line: &[u8]) -> Option<usize> {
    if line[0] != b'`' && line[0] != b'~' {
        return None;
    }
    search(Rule::close_code_fence, line)
}

#[inline(always)]
pub fn html_block_start(line: &[u8]) -> Option<usize> {
    const STR2: &'static [u8] = b"<!--";
    const STR3: &'static [u8] = b"<?";
    const STR5: &'static [u8] = b"<![CDATA[";

    if !line.starts_with(b"<") {
        return None;
    }

    if is_match(Rule::html_block_start_1, line) {
        Some(1)
    } else if line.starts_with(STR2) {
        Some(2)
    } else if line.starts_with(STR3) {
        Some(3)
    } else if is_match(Rule::html_block_start_4, line) {
        Some(4)
    } else if line.starts_with(STR5) {
        Some(5)
    } else if is_match(Rule::html_block_start_6, line) {
        Some(6)
    } else {
        None
    }
}

#[inline(always)]
pub fn html_block_start_7(line: &[u8]) -> Option<usize> {
    if is_match(Rule::html_block_start_7, line) {
        Some(7)
    } else {
        None
    }
}

pub enum SetextChar {
    Equals,
    Hyphen,
}

#[inline(always)]
pub fn setext_heading_line(line: &[u8]) -> Option<SetextChar> {
    if (line[0] == b'=' || line[0] == b'-') && is_match(Rule::setext_heading_line, line) {
        if line[0] == b'=' {
            Some(SetextChar::Equals)
        } else {
            Some(SetextChar::Hyphen)
        }
    } else {
        None
    }
}

#[inline(always)]
pub fn footnote_definition(line: &[u8]) -> Option<usize> {
    search(Rule::footnote_definition, line)
}

#[inline(always)]
pub fn scheme(line: &[u8]) -> Option<usize> {
    search(Rule::scheme_rule, line)
}

#[inline(always)]
pub fn autolink_uri(line: &[u8]) -> Option<usize> {
    search(Rule::autolink_uri, line)
}

#[inline(always)]
pub fn autolink_email(line: &[u8]) -> Option<usize> {
    search(Rule::autolink_email, line)
}

#[inline(always)]
pub fn html_tag(line: &[u8]) -> Option<usize> {
    search(Rule::html_tag, line)
}

#[inline(always)]
pub fn html_comment(line: &[u8]) -> Option<usize> {
    search(Rule::html_comment, line)
}

#[inline(always)]
pub fn html_processing_instruction(line: &[u8]) -> Option<usize> {
    search(Rule::html_processing_instruction, line)
}

#[inline(always)]
pub fn html_declaration(line: &[u8]) -> Option<usize> {
    search(Rule::html_declaration, line)
}

#[inline(always)]
pub fn html_cdata(line: &[u8]) -> Option<usize> {
    search(Rule::html_cdata, line)
}

#[inline(always)]
pub fn spacechars(line: &[u8]) -> Option<usize> {
    search(Rule::spacechars, line)
}

#[inline(always)]
pub fn link_title(line: &[u8]) -> Option<usize> {
    search(Rule::link_title, line)
}

#[cfg(feature = "shortcodes")]
#[inline(always)]
pub fn shortcode(line: &[u8]) -> Option<usize> {
    search(Rule::shortcode_rule, line)
}

#[inline(always)]
pub fn table_start(line: &[u8]) -> Option<usize> {
    search(Rule::table_start, line)
}

#[inline(always)]
pub fn table_cell(line: &[u8]) -> Option<usize> {
    search(Rule::table_cell, line)
}

#[inline(always)]
pub fn table_cell_end(line: &[u8]) -> Option<usize> {
    search(Rule::table_cell_end, line)
}

#[inline(always)]
pub fn table_row_end(line: &[u8]) -> Option<usize> {
    search(Rule::table_row_end, line)
}

#[inline(always)]
pub fn dangerous_url(line: &[u8]) -> Option<usize> {
    search(Rule::dangerous_url, line)
}

// vim: set ft=rust:
